Nodejs Dockerfile

# Stage 1: Build the Node.js application
FROM node:16-alpine AS build

# Set the working directory
WORKDIR /app

# Copy package.json and package-lock.json
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the application code
COPY . .

# Build the application (replace with your actual build command if needed)
RUN npm run build

# Stage 2: Serve with Nginx
FROM nginx:alpine

# Create a non-root user and group
RUN addgroup -S appgroup && adduser -S appuser -G appgroup

# Set the working directory for Nginx
WORKDIR /usr/share/nginx/html

# Copy built files from the build stage to the Nginx html directory
COPY --from=build /app/build /usr/share/nginx/html

# Copy custom Nginx configuration file
COPY nginx.conf /etc/nginx/nginx.conf

# Change ownership of the application files to the non-root user
RUN chown -R appuser:appgroup /usr/share/nginx/html

# Set the user to non-root user
USER appuser
